# 学生宿舍管理系统程序文档

## 1. 任务分析

本程序旨在实现一个小型的学生宿舍管理程序，主要面向宿舍管理员用户。根据实验要求，系统需要管理学生的基本信息（包括学号、姓名、性别、宿舍房间号和联系电话），并提供三个核心功能：按学号查找学生信息、录入新学生信息和显示所有学生信息。


## 2. 程序结构说明

### 2.1 数据结构
- 使用字典`students`存储所有学生信息
- 键：学号（字符串）
- 值：包含学生详细信息的字典（学号、姓名、性别、宿舍房间号、联系电话）
- 从文件读取时使用split()创建列表

### 2.2 使用函数模块化实现各项功能

#### `find_student(students)`
- **功能**：按学号查找学生信息
- **流程**：检查数据是否存在 → 输入学号 → 在字典中查找 → 显示结果或错误提示
- **错误处理**：空数据提示、学号不存在提示

#### `add_student(students)`
- **功能**：录入新学生信息
- **流程**：输入各项信息 → 验证输入有效性 → 确认信息 → 保存到字典
- **输入验证**：学号非空且唯一、姓名非空、性别必须为"男"或"女"、房间号和电话非空
- **错误处理**：重复学号提示、空值提示、性别输入错误提示

#### `display_all_students(students)`
- **功能**：显示所有学生信息
- **流程**：检查数据是否存在 → 格式化输出所有学生信息 → 显示统计数量
- **错误处理**：空数据提示

#### `save_data(students, filename)`
- **功能**：将数据保存到文件
- **格式**：CSV格式（逗号分隔）
- **错误处理**：文件操作异常捕获和提示

#### `load_data(filename)`
- **功能**：从文件加载数据
- **流程**：尝试打开文件 → 逐行读取解析 → 创建数据结构
- **错误处理**：文件不存在时创建新文件、文件格式错误提示

### 2.3 通过文件操作实现数据的持久化存储
- **保存功能** (`save_data`函数)：将内存中的学生字典数据以CSV格式写入文本文件
- **加载功能** (`load_data`函数)：从文本文件读取数据并重建学生字典

### 2.4 运用条件语句增强系统鲁棒性
1.  **输入验证**
  ```python
  if not student_id:  # 检查空输入
  if student_id in students:  # 检查学号是否存在
  if confirm == 'y':  # 确认操作
  ```
2. **从文件加载现有数据**
  ```python
  except FileNotFoundError:  # 文件不存在异常处理
  except Exception as e:  # 通用异常处理
  ```

### 2.5循环的运用

1. **while循环**：用于输入验证和主菜单
   ```python
   while True:  # 无限循环直到break
   while not name:  # 直到输入有效姓名
   ```

2. **for循环**：遍历字典和文件内容
   ```python
   for student_id, info in students.items():  # 遍历所有学生
   for line in f:  # 遍历文件每一行
   ```
## 3. 程序主函数流程
1. 启动程序，显示欢迎信息
2. 从文件加载现有数据
3. 显示功能菜单
4. 根据用户选择调用相应功能，每次操作后按回车键返回主菜单。
5. 循环执行直到用户选择退出
6. 退出前自动保存数据